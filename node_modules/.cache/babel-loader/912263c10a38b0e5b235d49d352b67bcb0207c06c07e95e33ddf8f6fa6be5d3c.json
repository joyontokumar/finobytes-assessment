{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE, persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport pointsSlice from \"./slices/point-summary\";\nimport purchasesSlice from \"./slices/purchases\";\nimport tokenInfoSlice from \"./slices/token\";\nimport usersInfoSlice from \"./slices/users\";\nconst rootReducer = combineReducers({\n  tokenInfo: tokenInfoSlice,\n  users: usersInfoSlice,\n  points: pointsSlice,\n  purchases: purchasesSlice\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: []\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, REGISTER, PAUSE, PERSIST, PURGE]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","REHYDRATE","persistReducer","persistStore","storage","pointsSlice","purchasesSlice","tokenInfoSlice","usersInfoSlice","rootReducer","tokenInfo","users","points","purchases","persistConfig","key","blacklist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/joyontokumarroy/Desktop/finobytes/src/store/index.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n  persistReducer,\n  persistStore,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport pointsSlice from \"./slices/point-summary\";\nimport purchasesSlice from \"./slices/purchases\";\nimport tokenInfoSlice from \"./slices/token\";\nimport usersInfoSlice from \"./slices/users\";\nconst rootReducer = combineReducers({\n  tokenInfo: tokenInfoSlice,\n  users: usersInfoSlice,\n  points: pointsSlice,\n  purchases: purchasesSlice,\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [],\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, REGISTER, PAUSE, PERSIST, PURGE],\n      },\n    }),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SACEC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,cAAc,EACdC,YAAY,QACP,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,MAAMC,WAAW,GAAGf,eAAe,CAAC;EAClCgB,SAAS,EAAEH,cAAc;EACzBI,KAAK,EAAEH,cAAc;EACrBI,MAAM,EAAEP,WAAW;EACnBQ,SAAS,EAAEP;AACb,CAAC,CAAC;AACF,MAAMQ,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXX,OAAO;EACPY,SAAS,EAAE;AACb,CAAC;AACD,MAAMC,gBAAgB,GAAGf,cAAc,CAACY,aAAa,EAAEL,WAAW,CAAC;AAEnE,OAAO,MAAMS,KAAK,GAAGvB,cAAc,CAAC;EAClCwB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC3B,KAAK,EAAEK,SAAS,EAAED,QAAQ,EAAEH,KAAK,EAAEC,OAAO,EAAEC,KAAK;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAGF,OAAO,MAAMyB,SAAS,GAAGrB,YAAY,CAACe,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}