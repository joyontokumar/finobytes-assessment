{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { pointsData } from \"../../../constants/points\";\nexport const fetchPoints = createAsyncThunk(\"points/fetchPoints\", async () => {\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n  await delay(3000);\n  return pointsData;\n});\nconst initialState = {\n  loading: false,\n  points: [],\n  error: null\n};\nconst pointsSlice = createSlice({\n  name: \"points\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPoints.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPoints.fulfilled, (state, action) => {\n      state.loading = false;\n      state.points = action.payload;\n    }).addCase(fetchPoints.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch points\";\n    });\n  }\n});\nexport default pointsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","pointsData","fetchPoints","delay","ms","Promise","res","setTimeout","initialState","loading","points","error","pointsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/joyontokumarroy/Desktop/finobytes/src/store/slices/point-summary/index.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { pointsData } from \"../../../constants/points\";\nimport { PointsDTO } from \"../../../dtos/points\";\n\nexport const fetchPoints = createAsyncThunk(\"points/fetchPoints\", async () => {\n  const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\n  await delay(3000);\n  return pointsData;\n});\n\ninterface PointsState {\n  loading: boolean;\n  points: PointsDTO[];\n  error: string | null;\n}\n\nconst initialState: PointsState = {\n  loading: false,\n  points: [],\n  error: null,\n};\n\nconst pointsSlice = createSlice({\n  name: \"points\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPoints.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchPoints.fulfilled,\n        (state, action: PayloadAction<PointsDTO[]>) => {\n          state.loading = false;\n          state.points = action.payload;\n        }\n      )\n      .addCase(fetchPoints.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch points\";\n      });\n  },\n});\n\nexport default pointsSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,SAASC,UAAU,QAAQ,2BAA2B;AAGtD,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC5E,MAAMI,KAAK,GAAIC,EAAU,IAAK,IAAIC,OAAO,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,EAAEF,EAAE,CAAC,CAAC;EACvE,MAAMD,KAAK,CAAC,IAAI,CAAC;EACjB,OAAOF,UAAU;AACnB,CAAC,CAAC;AAQF,MAAMO,YAAyB,GAAG;EAChCC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGZ,WAAW,CAAC;EAC9Ba,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,WAAW,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACV,OAAO,GAAG,IAAI;MACpBU,KAAK,CAACR,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDM,OAAO,CACNf,WAAW,CAACkB,SAAS,EACrB,CAACD,KAAK,EAAEE,MAAkC,KAAK;MAC7CF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,MAAM,GAAGW,MAAM,CAACC,OAAO;IAC/B,CACF,CAAC,CACAL,OAAO,CAACf,WAAW,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACa,OAAO,IAAI,wBAAwB;IAChE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,WAAW,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}