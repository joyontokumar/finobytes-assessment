{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { purchasesData } from \"../../../constants/purchases\";\nexport const fetchPurchases = createAsyncThunk(\"purchases/fetchPurchases\", async () => {\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n  await delay(3000);\n  return purchasesData;\n});\nconst initialState = {\n  loading: false,\n  purchases: [],\n  error: null\n};\nconst purchasesSlice = createSlice({\n  name: \"purchases\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPurchases.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPurchases.fulfilled, (state, action) => {\n      state.loading = false;\n      state.purchases = action.payload;\n    }).addCase(fetchPurchases.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch purchases\";\n    });\n  }\n});\nexport default purchasesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","purchasesData","fetchPurchases","delay","ms","Promise","res","setTimeout","initialState","loading","purchases","error","purchasesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/joyontokumarroy/Desktop/finobytes/src/store/slices/purchases/index.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { purchasesData } from \"../../../constants/purchases\";\nimport { PurchasesDTO } from \"../../../dtos/purchases\";\n\nexport const fetchPurchases = createAsyncThunk(\n  \"purchases/fetchPurchases\",\n  async () => {\n    const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\n    await delay(3000);\n    return purchasesData;\n  }\n);\n\ninterface PurchaseState {\n  loading: boolean;\n  purchases: PurchasesDTO[];\n  error: string | null;\n}\n\nconst initialState: PurchaseState = {\n  loading: false,\n  purchases: [],\n  error: null,\n};\n\nconst purchasesSlice = createSlice({\n  name: \"purchases\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPurchases.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchPurchases.fulfilled,\n        (state, action: PayloadAction<PurchasesDTO[]>) => {\n          state.loading = false;\n          state.purchases = action.payload;\n        }\n      )\n      .addCase(fetchPurchases.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch purchases\";\n      });\n  },\n});\n\nexport default purchasesSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,SAASC,aAAa,QAAQ,8BAA8B;AAG5D,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC5C,0BAA0B,EAC1B,YAAY;EACV,MAAMI,KAAK,GAAIC,EAAU,IAAK,IAAIC,OAAO,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,EAAEF,EAAE,CAAC,CAAC;EACvE,MAAMD,KAAK,CAAC,IAAI,CAAC;EACjB,OAAOF,aAAa;AACtB,CACF,CAAC;AAQD,MAAMO,YAA2B,GAAG;EAClCC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,cAAc,GAAGZ,WAAW,CAAC;EACjCa,IAAI,EAAE,WAAW;EACjBL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,cAAc,CAACgB,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACV,OAAO,GAAG,IAAI;MACpBU,KAAK,CAACR,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDM,OAAO,CACNf,cAAc,CAACkB,SAAS,EACxB,CAACD,KAAK,EAAEE,MAAqC,KAAK;MAChDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,SAAS,GAAGW,MAAM,CAACC,OAAO;IAClC,CACF,CAAC,CACAL,OAAO,CAACf,cAAc,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACa,OAAO,IAAI,2BAA2B;IACnE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,cAAc,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}